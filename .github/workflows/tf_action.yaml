name: "Terraform Deploy"
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  # issuer: write
  # pull-request: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_current_sp_id: ${{ secrets.AZURE_CLIENT_ID }} # Used for getting the id of the current SP
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./IaC
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{secrets.AZURE_TENANT_ID}}
          subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: "Az account"
        run: az account show

      # - name: "cd to IaC dir"
      #   run: cd IaC/

      - name: "pwd"
        run: pwd

      - name: "ls"
        run: ls

      - name: "Terraform Init"
        id: init
        env:
          STORAGE_ACCOUNT: ${{ secrets.STATE_STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{ secrets.STATE_CONTAINER_NAME }}
          RESOURCE_GROUP_NAME: ${{ secrets.STATE_RESOURCE_GROUP_NAME }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"
      - name: "Terraform Format"
        id: fmt
        run: terraform fmt

      - name: "Terraform Validate"
        id: validate
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color -var-file ../lab.auto.tfvars # uses subscription id from the env

      - name: "Terraform Apply"
        id: apply
        run: terraform apply -var-file ../lab.auto.tfvars # uses subscription id from the env